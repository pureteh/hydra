"use strict";(self.webpackChunkhydra_head_protocol_docs=self.webpackChunkhydra_head_protocol_docs||[]).push([[5791],{19257:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(67294),r=n(60614);const o={terminalWindow:"terminalWindow_wGrl",terminalWindowHeader:"terminalWindowHeader_o9Cs",terminalWindowBody:"terminalWindowBody_tzdS",row:"row_Rn7G",buttons:"buttons_IGLB",right:"right_fWp9",dot:"dot_fGZE"};function i(e){let{children:t,minHeight:n}=e;const i="string"==typeof t?a.createElement(r.Z,null,t):t;return a.createElement("div",{className:o.terminalWindow,style:{minHeight:n}},a.createElement("div",{className:o.terminalWindowHeader},a.createElement("div",{className:o.buttons},a.createElement("span",{className:o.dot,style:{background:"#f25f58"}}),a.createElement("span",{className:o.dot,style:{background:"#fbbe3c"}}),a.createElement("span",{className:o.dot,style:{background:"#58cb42"}}))),a.createElement("div",{className:o.terminalWindowBody},i))}},67212:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>D,contentTitle:()=>_,default:()=>W,frontMatter:()=>E,metadata:()=>I,toc:()=>V});var a=n(87462),r=n(67294),o=n(3905),i=n(19257),l=n(86010),d=n(12466),s=n(16550),c=n(91980),u=n(67392),p=n(50012);function m(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function k(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??m(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function h(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function v(e){let{queryString:t=!1,groupId:n}=e;const a=(0,s.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,c._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function y(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=k(e),[i,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[d,s]=v({queryString:n,groupId:a}),[c,u]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,p.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),m=(()=>{const e=d??c;return h({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{m&&l(m)}),[m]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),s(e),u(e)}),[s,u,o]),tabValues:o}}var b=n(72389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function f(e){let{className:t,block:n,selectedValue:o,selectValue:i,tabValues:s}=e;const c=[],{blockElementScrollPositionUntilNextRender:u}=(0,d.o5)(),p=e=>{const t=e.currentTarget,n=c.indexOf(t),a=s[n].value;a!==o&&(u(t),i(a))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},t)},s.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:p},i,{className:(0,l.Z)("tabs__item",g.tabItem,i?.className,{"tabs__item--active":o===t})}),n??t)})))}function N(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function w(e){const t=y(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",g.tabList)},r.createElement(f,(0,a.Z)({},e,t)),r.createElement(N,(0,a.Z)({},e,t)))}function T(e){const t=(0,b.Z)();return r.createElement(w,(0,a.Z)({key:String(t)},e))}const C={tabItem:"tabItem_Ymn6"};function x(e){let{children:t,hidden:n,className:a}=e;return r.createElement("div",{role:"tabpanel",className:(0,l.Z)(C.tabItem,a),hidden:n},t)}const E={sidebar_position:3},_="\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3067\u4f7f\u7528(Docker\u306a\u3057)",I={unversionedId:"getting-started/demo/without-docker",id:"getting-started/demo/without-docker",title:"\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3067\u4f7f\u7528(Docker\u306a\u3057)",description:"Docker\u30b3\u30f3\u30c6\u30ca\u306a\u3057\u3067\u3001\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3068\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u30c7\u30e2\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002",source:"@site/i18n/ja/docusaurus-plugin-content-docs/current/getting-started/demo/without-docker.md",sourceDirName:"getting-started/demo",slug:"/getting-started/demo/without-docker",permalink:"/head-protocol/ja/docs/getting-started/demo/without-docker",draft:!1,editUrl:"https://github.com/input-output-hk/hydra/tree/master/docs/i18n/ja/docusaurus-plugin-content-docs/current/getting-started/demo/without-docker.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"Docker \u3067\u4f7f\u7528",permalink:"/head-protocol/ja/docs/getting-started/demo/with-docker"},next:{title:"Operating a Hydra Node",permalink:"/head-protocol/ja/docs/getting-started/operating-hydra"}},D={},V=[{value:"\u6e96\u5099",id:"\u6e96\u5099",level:2},{value:"\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u8a2d\u5b9a",id:"\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u8a2d\u5b9a",level:2},{value:"Seeding The Network",id:"seeding-the-network",level:2},{value:"Setting-up The Hydra Network",id:"setting-up-the-hydra-network",level:2},{value:"\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u69cb\u7bc9",id:"\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u69cb\u7bc9",level:2},{value:"\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u5b9f\u884c",id:"\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u5b9f\u884c",level:2}],Z={toc:V},S="wrapper";function W(e){let{components:t,...n}=e;return(0,o.kt)(S,(0,a.Z)({},Z,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3067\u4f7f\u7528docker\u306a\u3057"},"\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3067\u4f7f\u7528(Docker\u306a\u3057)"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Docker\u30b3\u30f3\u30c6\u30ca\u306a\u3057\u3067\u3001\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3068\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u30c7\u30e2\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002")),(0,o.kt)("h2",{id:"\u6e96\u5099"},"\u6e96\u5099"),(0,o.kt)("p",null,"\u30b9\u30b3\u30fc\u30d7\u306b\u300ccardano-node\u300d\u3001\u300chydra-node\u300d\u3001\u304a\u3088\u3073\u300chydra-tui\u300d\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6b21\u306e\u3044\u305a\u308c\u304b\u3092\u5b9f\u884c\u3067\u304d\u307e\u3059"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"nix develop .#demo")," \u3092\u4f7f\u7528\u3059\u308b\u304b\u3001"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cabal build")," \u3068 ",(0,o.kt)("inlineCode",{parentName:"li"},"cabal exec")," \u3092\u5b9f\u884c\u3057\u307e\u3059 (\u3055\u3089\u306b\u5f15\u6570\u3092\u6e21\u3059\u524d\u306b ",(0,o.kt)("inlineCode",{parentName:"li"},"--")," \u3092\u5fd8\u308c\u306a\u3044\u3067\u304f\u3060\u3055\u3044)\u3002")),(0,o.kt)("admonition",{title:"tmux \u30e6\u30fc\u30b6\u30fc\u5411\u3051\u306e\u30d2\u30f3\u30c8",type:"info"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("inlineCode",{parentName:"p"},"demo")," nix shell \u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3059\u3079\u3066\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u8907\u6570\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u3068\u30da\u30a4\u30f3\u3067\u65b0\u3057\u3044 ",(0,o.kt)("inlineCode",{parentName:"p"},"tmux")," \u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3059\u308b ",(0,o.kt)("inlineCode",{parentName:"p"},"run-hydra-demo")," \u30b9\u30af\u30ea\u30d7\u30c8\u304c\u3042\u308a\u307e\u3059!")),(0,o.kt)("p",null,"\u4ee5\u964d\u306e\u3059\u3079\u3066\u306e\u30b3\u30de\u30f3\u30c9\u306f\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 \u30ea\u30dd\u30b8\u30c8\u30ea\u306e ",(0,o.kt)("inlineCode",{parentName:"p"},"demo")," \u30d5\u30a9\u30eb\u30c0\u304b\u3089\u5b9f\u884c\u3055\u308c\u308b\u304b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3055\u308c\u308b\u305f\u3081\u3001\u7d9a\u884c\u3059\u308b\u524d\u306b\u5fc5\u305a ",(0,o.kt)("inlineCode",{parentName:"p"},"cd demo")," \u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002"),(0,o.kt)("admonition",{title:"nix-direnv \u30e6\u30fc\u30b6\u30fc\u5411\u3051\u306e\u30d2\u30f3\u30c8",type:"info"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("inlineCode",{parentName:"p"},"demo/.envrc")," \u3092\u8a31\u53ef\u3059\u308b\u3068\u3001",(0,o.kt)("inlineCode",{parentName:"p"},"demo/")," \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3044\u308b\u3068\u304d\u306f\u3044\u3064\u3067\u3082 nix \u30b7\u30a7\u30eb\u74b0\u5883\u3092\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u3053\u308c\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001",(0,o.kt)("inlineCode",{parentName:"p"},"cd demo")," \u306e\u5f8c\u306b ",(0,o.kt)("inlineCode",{parentName:"p"},"direnv allow")," \u3067\u30aa\u30d7\u30c8\u30a4\u30f3\u3057\u307e\u3059\u3002")),(0,o.kt)("h2",{id:"\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u8a2d\u5b9a"},"\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u8a2d\u5b9a"),(0,o.kt)("p",null,"\u307e\u305a\u3001\u5358\u4e00\u306e ",(0,o.kt)("inlineCode",{parentName:"p"},"cardano-node")," \u958b\u767a\u30cd\u30c3\u30c8 \u3092\u7528\u610f\u3057\u3001\u3053\u306e\u8a2d\u5b9a\u3092\u4f7f\u3063\u3066\u8d77\u52d5\u3057\u307e\u3059\u3002\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b ",(0,o.kt)("inlineCode",{parentName:"p"},"devnet")," \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u4f5c\u6210\u3055\u308c\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002"),(0,o.kt)(i.Z,{mdxType:"TerminalWindow"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"./prepare-devnet.sh\ncd devnet\nmkdir ipc\ncabal exec cardano-node -- run \\\n  --config cardano-node.json \\\n  --topology topology.json \\\n  --database-path db \\\n  --socket-path node.socket \\\n  --shelley-operational-certificate opcert.cert \\\n  --shelley-kes-key kes.skey \\\n  --shelley-vrf-key vrf.skey\n"))),(0,o.kt)("h2",{id:"seeding-the-network"},"Seeding The Network"),(0,o.kt)("p",null,"You can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"seed-devnet.sh")," script by passing it the path/command to a cardano-cli and hydra-node executable to use, instead of having it using the Docker container. For example:"),(0,o.kt)(i.Z,{mdxType:"TerminalWindow"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'export CARDANO_NODE_SOCKET_PATH=devnet/node.socket\n./seed-devnet.sh $(which cardano-cli) $(which hydra-node)"\n'))),(0,o.kt)("p",null,"Note, should you want to use ",(0,o.kt)("inlineCode",{parentName:"p"},"cabal"),", pass the invocation for example like this ",(0,o.kt)("inlineCode",{parentName:"p"},'"cabal exec hydra-node --"'),"."),(0,o.kt)("h2",{id:"setting-up-the-hydra-network"},"Setting-up The Hydra Network"),(0,o.kt)("p",null,"\u6b21\u306b\u30013\u3064\u306e\u7570\u306a\u308b\u7aef\u672b\u3067\u3001",(0,o.kt)("inlineCode",{parentName:"p"},"demo/")," \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u30893\u3064\u306e Hydra \u30ce\u30fc\u30c9\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002"),(0,o.kt)("admonition",{title:"Note",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"We are trying to force ipv4 addresses by using ",(0,o.kt)("inlineCode",{parentName:"p"},"--peer 127.0.0.1"),".\nIf you don't see any connected peers in the tui it probably means that your system is configured to use ipv6.")),(0,o.kt)(T,{mdxType:"Tabs"},(0,o.kt)(x,{value:"Alice",mdxType:"TabItem"},(0,o.kt)(i.Z,{mdxType:"TerminalWindow"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"source .env && hydra-node \\\n  --node-id 1 --port 5001 --api-port 4001 --monitoring-port 6001 \\\n  --peer 127.0.0.1:5002 \\\n  --peer 127.0.0.1:5003 \\\n  --hydra-signing-key alice.sk \\\n  --hydra-verification-key bob.vk \\\n  --hydra-verification-key carol.vk \\\n  --cardano-signing-key devnet/credentials/alice.sk \\\n  --cardano-verification-key devnet/credentials/bob.vk \\\n  --cardano-verification-key devnet/credentials/carol.vk \\\n  --ledger-protocol-parameters devnet/protocol-parameters.json \\\n  --testnet-magic 42 \\\n  --node-socket devnet/node.socket\n")))),(0,o.kt)(x,{value:"Bob",mdxType:"TabItem"},(0,o.kt)(i.Z,{mdxType:"TerminalWindow"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"source .env && hydra-node \\\n  --node-id 2 --port 5002 --api-port 4002 --monitoring-port 6002 \\\n  --peer 127.0.0.1:5001 \\\n  --peer 127.0.0.1:5003 \\\n  --hydra-signing-key bob.sk \\\n  --hydra-verification-key alice.vk \\\n  --hydra-verification-key carol.vk \\\n  --cardano-signing-key devnet/credentials/bob.sk \\\n  --cardano-verification-key devnet/credentials/alice.vk \\\n  --cardano-verification-key devnet/credentials/carol.vk \\\n  --ledger-protocol-parameters devnet/protocol-parameters.json \\\n  --testnet-magic 42 \\\n  --node-socket devnet/node.socket\n")))),(0,o.kt)(x,{value:"Carol",mdxType:"TabItem"},(0,o.kt)(i.Z,{mdxType:"TerminalWindow"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"source .env && hydra-node \\\n  --node-id 3 --port 5003 --api-port 4003 --monitoring-port 6003 \\\n  --peer 127.0.0.1:5001 \\\n  --peer 127.0.0.1:5002 \\\n  --hydra-signing-key carol.sk \\\n  --hydra-verification-key alice.vk \\\n  --hydra-verification-key bob.vk \\\n  --cardano-signing-key devnet/credentials/carol.sk \\\n  --cardano-verification-key devnet/credentials/alice.vk \\\n  --cardano-verification-key devnet/credentials/bob.vk \\\n  --ledger-protocol-parameters devnet/protocol-parameters.json \\\n  --testnet-magic 42 \\\n  --node-socket devnet/node.socket\n"))))),(0,o.kt)("p",null,"\u3046\u307e\u304f\u3044\u3051\u3070\u3001\u30c1\u30a7\u30fc\u30f3\u306b\u63a5\u7d9a\u3055\u308c\u305f\u30ce\u30fc\u30c9\u306f\u30ed\u30b0\u53ce\u96c6\u3092\u958b\u59cb\u3057\u307e\u3059\u3002"),(0,o.kt)("h2",{id:"\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u69cb\u7bc9"},"\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u69cb\u7bc9"),(0,o.kt)("p",null,"Docker\u30b3\u30f3\u30c6\u30ca\u3092\u4f7f\u7528\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u4f7f\u7528\u3059\u308bcardano-cli\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u30d1\u30b9\u3092\u6e21\u3059\u3053\u3068\u3067\u3001",(0,o.kt)("inlineCode",{parentName:"p"},"seed-devnet.sh"),"\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3048\u3070\uff1a"),(0,o.kt)(i.Z,{mdxType:"TerminalWindow"},"./seed-devnet.sh $(which cardano-cli)"),(0,o.kt)("h2",{id:"\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u5b9f\u884c"},"\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u5b9f\u884c"),(0,o.kt)("p",null,"hydra-tui\u3092\u4f7f\u3063\u3066\u30ce\u30fc\u30c9\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30a2\u30ea\u30b9\u306e\u30cf\u30a4\u30c9\u30e9\u30ce\u30fc\u30c9\u3068\u5f7c\u5973\u306e\u30aa\u30f3\u30c1\u30a7\u30fc\u30f3\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u3002"),(0,o.kt)(i.Z,{mdxType:"TerminalWindow"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cabal exec hydra-tui -- \\\n  --connect 0.0.0.0:4001 \\\n  --cardano-signing-key devnet/credentials/alice.sk \\\n  --testnet-magic 42 \\\n  --node-socket devnet/node.socket\n"))),(0,o.kt)("p",null,"\u30dd\u30fc\u30c8 ",(0,o.kt)("inlineCode",{parentName:"p"},"4001")," \u3092 ",(0,o.kt)("inlineCode",{parentName:"p"},"4002")," \u307e\u305f\u306f ",(0,o.kt)("inlineCode",{parentName:"p"},"4003")," \u306b\u7f6e\u304d\u63db\u3048\u3066\u4ed6\u306e2\u30ce\u30fc\u30c9\u306b\u63a5\u7d9a\u3057\u3001 ",(0,o.kt)("inlineCode",{parentName:"p"},"alice.sk")," \u3092\u305d\u308c\u305e\u308c ",(0,o.kt)("inlineCode",{parentName:"p"},"bob.sk")," \u307e\u305f\u306f ",(0,o.kt)("inlineCode",{parentName:"p"},"carol.sk")," \u306b\u7f6e\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\u3002"))}W.isMDXComponent=!0}}]);